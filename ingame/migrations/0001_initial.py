# Generated by Django 2.0.7 on 2018-09-26 04:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Acceptip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.TextField()),
            ],
            options={
                'db_table': 'acceptip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('number_2ndpassword', models.CharField(blank=True, db_column='2ndpassword', max_length=134, null=True)),
                ('using2ndpassword', models.IntegerField()),
                ('loggedin', models.PositiveIntegerField()),
                ('lastlogin', models.DateTimeField(blank=True, null=True)),
                ('createdat', models.DateTimeField()),
                ('banned', models.IntegerField()),
                ('banreason', models.TextField(blank=True, null=True)),
                ('gm', models.IntegerField()),
                ('email', models.TextField(blank=True, null=True)),
                ('macs', models.TextField(blank=True, null=True)),
                ('tempban', models.DateTimeField()),
                ('greason', models.PositiveIntegerField(blank=True, null=True)),
                ('nxcash', models.IntegerField(blank=True, db_column='nxCash', null=True)),
                ('mpoints', models.IntegerField(blank=True, db_column='mPoints', null=True)),
                ('gender', models.IntegerField()),
                ('sessionip', models.CharField(blank=True, db_column='SessionIP', max_length=64, null=True)),
                ('ip', models.TextField(blank=True, null=True)),
                ('pin', models.PositiveIntegerField()),
                ('vpoints', models.IntegerField(blank=True, null=True)),
                ('idcode1', models.IntegerField()),
                ('idcode2', models.IntegerField()),
                ('lastconnect', models.CharField(max_length=10)),
                ('realcash', models.PositiveIntegerField(blank=True, null=True)),
                ('aimkind', models.IntegerField()),
                ('promote', models.PositiveIntegerField(blank=True, null=True)),
                ('chrslot', models.PositiveIntegerField()),
                ('checkmeso', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Acheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.PositiveIntegerField()),
                ('keya', models.CharField(max_length=80)),
                ('value', models.CharField(max_length=80)),
                ('day', models.IntegerField()),
            ],
            options={
                'db_table': 'acheck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alliances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice', models.CharField(max_length=101)),
                ('name', models.CharField(max_length=45)),
                ('guild1', models.IntegerField()),
                ('guild2', models.IntegerField()),
                ('guild3', models.IntegerField()),
                ('guild4', models.IntegerField()),
                ('guild5', models.IntegerField()),
                ('rank1', models.CharField(max_length=45)),
                ('rank2', models.CharField(max_length=45)),
                ('rank3', models.CharField(max_length=45)),
                ('rank4', models.CharField(max_length=45)),
                ('rank5', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'alliances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Android',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('itemid', models.IntegerField()),
                ('hair', models.IntegerField()),
                ('face', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('uniqueid', models.IntegerField()),
                ('skincolor', models.IntegerField()),
            ],
            options={
                'db_table': 'android',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attendcheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accid', models.PositiveIntegerField()),
                ('weekly_check', models.PositiveIntegerField()),
                ('returnattend', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'attendcheck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Auctionequipment',
            fields=[
                ('inventoryequipmentid', models.AutoField(primary_key=True, serialize=False)),
                ('inventoryitemid', models.PositiveIntegerField()),
                ('upgradeslots', models.IntegerField()),
                ('level', models.IntegerField()),
                ('str', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('int', models.IntegerField()),
                ('luk', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('watk', models.IntegerField()),
                ('matk', models.IntegerField()),
                ('wdef', models.IntegerField()),
                ('mdef', models.IntegerField()),
                ('acc', models.IntegerField()),
                ('avoid', models.IntegerField()),
                ('hands', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('jump', models.IntegerField()),
                ('vicioushammer', models.IntegerField(db_column='ViciousHammer')),
                ('itemlevel', models.IntegerField(db_column='itemLevel')),
                ('itemexp', models.IntegerField(db_column='itemEXP')),
                ('durability', models.IntegerField()),
                ('enhance', models.SmallIntegerField()),
                ('state', models.IntegerField()),
                ('lines', models.IntegerField()),
                ('potential1', models.IntegerField()),
                ('potential2', models.IntegerField()),
                ('potential3', models.IntegerField()),
                ('potential4', models.IntegerField()),
                ('potential5', models.IntegerField()),
                ('potential6', models.IntegerField()),
                ('anvil', models.IntegerField()),
                ('hpr', models.SmallIntegerField(db_column='hpR')),
                ('mpr', models.SmallIntegerField(db_column='mpR')),
                ('potential7', models.IntegerField()),
                ('fire', models.IntegerField()),
                ('downlevel', models.IntegerField()),
                ('bossdmg', models.IntegerField()),
                ('alldmgp', models.IntegerField()),
                ('allstatp', models.IntegerField()),
                ('ignorewdef', models.IntegerField(db_column='IgnoreWdef')),
                ('soulname', models.IntegerField()),
                ('soulenchanter', models.IntegerField()),
                ('soulpotential', models.IntegerField()),
                ('soulskill', models.IntegerField()),
                ('starforce', models.IntegerField()),
                ('itemtrace', models.IntegerField()),
                ('firestat', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'auctionequipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Auctionitems',
            fields=[
                ('inventoryitemid', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('characterid', models.IntegerField(blank=True, null=True)),
                ('accountid', models.IntegerField()),
                ('packageid', models.IntegerField(db_column='packageId')),
                ('itemid', models.IntegerField()),
                ('inventorytype', models.IntegerField()),
                ('position', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('owner', models.TextField(blank=True, null=True)),
                ('gm_log', models.TextField(blank=True, db_column='GM_Log', null=True)),
                ('uniqueid', models.IntegerField()),
                ('flag', models.IntegerField()),
                ('expiredate', models.BigIntegerField()),
                ('giftfrom', models.CharField(blank=True, db_column='giftFrom', max_length=20, null=True)),
                ('iscash', models.IntegerField(db_column='isCash')),
                ('ispet', models.IntegerField(db_column='isPet')),
                ('isandroid', models.IntegerField(db_column='isAndroid')),
                ('issale', models.IntegerField()),
                ('bid', models.BigIntegerField(blank=True, null=True)),
                ('meso', models.BigIntegerField()),
                ('expired', models.BigIntegerField()),
                ('bargain', models.IntegerField()),
                ('ownername', models.CharField(max_length=45)),
                ('buyer', models.IntegerField(blank=True, null=True)),
                ('buytime', models.BigIntegerField()),
                ('starttime', models.BigIntegerField()),
                ('inventoryid', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'auctionitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Auctions',
            fields=[
                ('characterid', models.IntegerField(primary_key=True, serialize=False)),
                ('bid', models.IntegerField()),
                ('inventoryid', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'auctions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthServerLogin',
            fields=[
                ('loginserverid', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=40)),
                ('world', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_server_login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Banksystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('money', models.BigIntegerField()),
                ('date', models.TextField()),
                ('time', models.BigIntegerField()),
                ('try_field', models.PositiveIntegerField(db_column='try')),
            ],
            options={
                'db_table': 'banksystem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BbsReplies',
            fields=[
                ('replyid', models.AutoField(primary_key=True, serialize=False)),
                ('threadid', models.PositiveIntegerField()),
                ('postercid', models.PositiveIntegerField()),
                ('timestamp', models.BigIntegerField()),
                ('content', models.CharField(max_length=26)),
            ],
            options={
                'db_table': 'bbs_replies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BbsThreads',
            fields=[
                ('threadid', models.AutoField(primary_key=True, serialize=False)),
                ('postercid', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=26)),
                ('timestamp', models.BigIntegerField()),
                ('icon', models.PositiveSmallIntegerField()),
                ('replycount', models.PositiveSmallIntegerField()),
                ('startpost', models.TextField()),
                ('guildid', models.PositiveIntegerField()),
                ('localthreadid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'bbs_threads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField(blank=True, null=True)),
                ('gun', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'boom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boomboom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create', models.TextField(blank=True, null=True)),
                ('gun', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'boomboom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bosscooltime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.IntegerField()),
                ('map', models.IntegerField()),
                ('time', models.BigIntegerField()),
            ],
            options={
                'db_table': 'bosscooltime',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bosslog',
            fields=[
                ('bosslogid', models.AutoField(primary_key=True, serialize=False)),
                ('characterid', models.PositiveIntegerField()),
                ('bossid', models.CharField(max_length=20)),
                ('lastattempt', models.DateTimeField()),
            ],
            options={
                'db_table': 'bosslog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bossraidtime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bgin', models.CharField(max_length=45)),
                ('ends', models.CharField(max_length=45)),
                ('name', models.CharField(max_length=45)),
                ('diff', models.CharField(max_length=45)),
                ('time', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('pmem', models.CharField(max_length=45)),
                ('size', models.IntegerField()),
            ],
            options={
                'db_table': 'bossraidtime',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bossremain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charid', models.PositiveIntegerField()),
                ('bossid', models.PositiveIntegerField()),
                ('remain', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'bossremain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BossTotalRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('boss', models.IntegerField()),
                ('bgin', models.CharField(max_length=45)),
                ('ends', models.CharField(max_length=45)),
                ('time', models.IntegerField()),
                ('pmem', models.CharField(max_length=45)),
                ('size', models.IntegerField()),
            ],
            options={
                'db_table': 'boss_total_rank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Buddies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterid', models.IntegerField()),
                ('buddyid', models.IntegerField()),
                ('pending', models.IntegerField()),
                ('groupname', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'buddies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Burningfield',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False)),
                ('burningmapid', models.IntegerField(db_column='burningMapId')),
                ('burningexprate', models.IntegerField(db_column='burningExpRate')),
                ('burningchannel', models.IntegerField(db_column='burningChannel')),
            ],
            options={
                'db_table': 'burningfield',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Charactercard',
            fields=[
                ('accountid', models.IntegerField(primary_key=True, serialize=False)),
                ('cardid', models.IntegerField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'charactercard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CharacterCards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accid', models.IntegerField()),
                ('worldid', models.IntegerField()),
                ('characterid', models.IntegerField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'character_cards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Characters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountid', models.IntegerField()),
                ('name', models.CharField(max_length=13)),
                ('level', models.IntegerField()),
                ('exp', models.BigIntegerField()),
                ('str', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('luk', models.IntegerField()),
                ('int', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('maxhp', models.IntegerField()),
                ('maxmp', models.IntegerField()),
                ('meso', models.BigIntegerField()),
                ('hpapused', models.IntegerField(db_column='hpApUsed')),
                ('mpapused', models.IntegerField(db_column='mpApUsed')),
                ('job', models.IntegerField()),
                ('skincolor', models.IntegerField()),
                ('skincolor2', models.IntegerField()),
                ('gender', models.IntegerField()),
                ('gender2', models.IntegerField()),
                ('fame', models.IntegerField()),
                ('hair', models.PositiveIntegerField()),
                ('hair2', models.IntegerField()),
                ('face', models.IntegerField()),
                ('face2', models.IntegerField()),
                ('wp', models.IntegerField()),
                ('askguildid', models.IntegerField()),
                ('ap', models.IntegerField()),
                ('map', models.IntegerField()),
                ('spawnpoint', models.IntegerField()),
                ('gm', models.IntegerField()),
                ('party', models.IntegerField()),
                ('buddycapacity', models.IntegerField(db_column='buddyCapacity')),
                ('createdate', models.DateTimeField()),
                ('rank', models.PositiveIntegerField()),
                ('rankmove', models.IntegerField(db_column='rankMove')),
                ('worldrank', models.PositiveIntegerField(db_column='worldRank')),
                ('worldrankmove', models.IntegerField(db_column='worldRankMove')),
                ('guildid', models.PositiveIntegerField()),
                ('guildrank', models.PositiveIntegerField()),
                ('alliancerank', models.PositiveIntegerField(db_column='allianceRank')),
                ('messengerid', models.PositiveIntegerField()),
                ('messengerposition', models.PositiveIntegerField()),
                ('monsterbookcover', models.PositiveIntegerField()),
                ('subcategory', models.IntegerField(blank=True, null=True)),
                ('reborns', models.PositiveIntegerField()),
                ('sp', models.CharField(max_length=255)),
                ('ambition', models.IntegerField()),
                ('insight', models.IntegerField()),
                ('willpower', models.IntegerField()),
                ('diligence', models.IntegerField()),
                ('empathy', models.IntegerField()),
                ('charm', models.IntegerField()),
                ('innerexp', models.PositiveIntegerField(db_column='innerExp')),
                ('innerlevel', models.PositiveIntegerField(db_column='innerLevel')),
                ('artifactpoints', models.IntegerField(db_column='artifactPoints')),
                ('morphgage', models.IntegerField(db_column='morphGage')),
                ('firstprofession', models.IntegerField(db_column='firstProfession')),
                ('secondprofession', models.IntegerField(db_column='secondProfession')),
                ('firstprofessionlevel', models.IntegerField(db_column='firstProfessionLevel')),
                ('secondprofessionlevel', models.IntegerField(db_column='secondProfessionLevel')),
                ('firstprofessionexp', models.IntegerField(db_column='firstProfessionExp')),
                ('secondprofessionexp', models.IntegerField(db_column='secondProfessionExp')),
                ('fatigue', models.IntegerField()),
                ('last_command_time', models.BigIntegerField()),
                ('pet_id', models.CharField(max_length=60)),
                ('pet_loot', models.IntegerField()),
                ('pet_mp', models.IntegerField()),
                ('pet_hp', models.IntegerField()),
                ('rankpoint', models.IntegerField()),
                ('gp', models.IntegerField()),
                ('soul', models.IntegerField()),
                ('chatban', models.CharField(max_length=45)),
                ('betaclothes', models.IntegerField()),
                ('burning', models.IntegerField()),
                ('loginpoint', models.IntegerField()),
                ('damageskinslot', models.IntegerField(blank=True, null=True)),
                ('savedamageskin', models.CharField(blank=True, db_column='saveDamageSkin', max_length=250, null=True)),
                ('nmixbasehaircolor', models.IntegerField(blank=True, db_column='nMixBaseHairColor', null=True)),
                ('nmixaddhaircolor', models.IntegerField(blank=True, db_column='nMixAddHairColor', null=True)),
                ('nmixhairbaseprob', models.IntegerField(blank=True, db_column='nMixHairBaseProb', null=True)),
                ('damage', models.BigIntegerField(blank=True, null=True)),
                ('guildpoint', models.BigIntegerField(blank=True, db_column='guildPoint', null=True)),
                ('guildigp', models.IntegerField(blank=True, db_column='guildIGP', null=True)),
                ('itcafetime', models.IntegerField(blank=True, null=True)),
                ('hope', models.CharField(max_length=45)),
                ('damagehit', models.PositiveIntegerField()),
                ('subjobcode', models.IntegerField(blank=True, null=True)),
                ('subjoblevel', models.IntegerField(blank=True, null=True)),
                ('subjobexp', models.BigIntegerField(blank=True, null=True)),
                ('subjobname', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'characters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chrid', models.IntegerField()),
                ('item', models.IntegerField()),
                ('qua', models.IntegerField()),
                ('code', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.PositiveIntegerField()),
                ('color', models.IntegerField()),
                ('selection', models.TextField()),
            ],
            options={
                'db_table': 'color',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('item', models.TextField(blank=True, null=True)),
                ('itemn', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'coupon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Damagerank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=45)),
                ('damage', models.BigIntegerField()),
            ],
            options={
                'db_table': 'damagerank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DropData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('dropperid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('minimum_quantity', models.IntegerField()),
                ('maximum_quantity', models.IntegerField()),
                ('questid', models.IntegerField()),
                ('chance', models.IntegerField()),
            ],
            options={
                'db_table': 'drop_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DropDataGlobal',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('continent', models.IntegerField()),
                ('droptype', models.IntegerField(db_column='dropType')),
                ('itemid', models.IntegerField()),
                ('minimum_quantity', models.IntegerField()),
                ('maximum_quantity', models.IntegerField()),
                ('questid', models.IntegerField()),
                ('chance', models.IntegerField()),
                ('comments', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'drop_data_global',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DropDataVana',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('dropperid', models.IntegerField()),
                ('flags', models.CharField(max_length=8)),
                ('itemid', models.IntegerField()),
                ('minimum_quantity', models.IntegerField()),
                ('maximum_quantity', models.IntegerField()),
                ('questid', models.IntegerField()),
                ('chance', models.IntegerField()),
            ],
            options={
                'db_table': 'drop_data_vana',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dueypackages',
            fields=[
                ('packageid', models.AutoField(db_column='PackageId', primary_key=True, serialize=False)),
                ('recieverid', models.IntegerField(db_column='RecieverId')),
                ('sendername', models.CharField(db_column='SenderName', max_length=13)),
                ('mesos', models.PositiveIntegerField(blank=True, db_column='Mesos', null=True)),
                ('timestamp', models.BigIntegerField(blank=True, db_column='TimeStamp', null=True)),
                ('checked', models.PositiveIntegerField(blank=True, db_column='Checked', null=True)),
                ('type', models.PositiveIntegerField(db_column='Type')),
            ],
            options={
                'db_table': 'dueypackages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventstats',
            fields=[
                ('eventstatid', models.AutoField(primary_key=True, serialize=False)),
                ('event', models.CharField(max_length=30)),
                ('instance', models.CharField(max_length=30)),
                ('characterid', models.IntegerField()),
                ('channel', models.IntegerField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'eventstats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extendedslots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('characterid', models.IntegerField()),
                ('uniqueid', models.IntegerField()),
            ],
            options={
                'db_table': 'extendedslots',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Famelog',
            fields=[
                ('famelogid', models.AutoField(primary_key=True, serialize=False)),
                ('characterid', models.IntegerField()),
                ('characterid_to', models.IntegerField()),
                ('when', models.DateTimeField()),
            ],
            options={
                'db_table': 'famelog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fireitem',
            fields=[
                ('value', models.AutoField(primary_key=True, serialize=False)),
                ('uniqueid', models.IntegerField()),
                ('mdef', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('wdef', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('jump', models.IntegerField()),
                ('fire', models.IntegerField()),
                ('hands', models.IntegerField()),
                ('avoid', models.IntegerField()),
                ('acc', models.IntegerField()),
                ('watk', models.IntegerField()),
                ('matk', models.IntegerField()),
                ('str', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('field_int', models.IntegerField(db_column='_int')),
                ('luk', models.IntegerField()),
            ],
            options={
                'db_table': 'fireitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Force',
            fields=[
                ('forceid', models.AutoField(primary_key=True, serialize=False)),
                ('point', models.IntegerField()),
            ],
            options={
                'db_table': 'force',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Forcemap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mapid', models.IntegerField()),
                ('mobcount', models.IntegerField()),
                ('force', models.IntegerField()),
                ('channel', models.IntegerField()),
                ('time', models.BigIntegerField()),
            ],
            options={
                'db_table': 'forcemap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Futurehope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.PositiveIntegerField()),
                ('hope', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'futurehope',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GamePollReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountid', models.PositiveIntegerField(db_column='AccountId')),
                ('selectans', models.PositiveIntegerField(db_column='SelectAns')),
            ],
            options={
                'db_table': 'game_poll_reply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guilds',
            fields=[
                ('guildid', models.AutoField(primary_key=True, serialize=False)),
                ('leader', models.PositiveIntegerField()),
                ('gp', models.PositiveIntegerField(db_column='GP')),
                ('logo', models.PositiveIntegerField(blank=True, null=True)),
                ('logocolor', models.PositiveSmallIntegerField(db_column='logoColor')),
                ('name', models.CharField(max_length=45)),
                ('rank1title', models.CharField(max_length=45)),
                ('rank2title', models.CharField(max_length=45)),
                ('rank3title', models.CharField(max_length=45)),
                ('rank4title', models.CharField(max_length=45)),
                ('rank5title', models.CharField(max_length=45)),
                ('capacity', models.PositiveIntegerField()),
                ('logobg', models.PositiveIntegerField(blank=True, db_column='logoBG', null=True)),
                ('logobgcolor', models.PositiveSmallIntegerField(db_column='logoBGColor')),
                ('notice', models.CharField(blank=True, max_length=101, null=True)),
                ('signature', models.IntegerField()),
                ('alliance', models.PositiveIntegerField()),
                ('guildlevel', models.PositiveIntegerField(db_column='guildLevel')),
                ('hoorexp', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'guilds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guildsills',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('skillid', models.PositiveIntegerField()),
                ('time', models.BigIntegerField()),
                ('buyer', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'guildsills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guildskills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guildid', models.PositiveIntegerField(blank=True, null=True)),
                ('skillid', models.PositiveIntegerField(blank=True, null=True)),
                ('level', models.PositiveIntegerField(blank=True, null=True)),
                ('timestamp', models.BigIntegerField(blank=True, null=True)),
                ('purchaser', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'guildskills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hardban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.TextField()),
            ],
            options={
                'db_table': 'hardban',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hiredmerch',
            fields=[
                ('packageid', models.AutoField(db_column='PackageId', primary_key=True, serialize=False)),
                ('characterid', models.PositiveIntegerField(blank=True, null=True)),
                ('accountid', models.PositiveIntegerField(blank=True, null=True)),
                ('mesos', models.PositiveIntegerField(blank=True, db_column='Mesos', null=True)),
                ('time', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hiredmerch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hiredmerchantsaveitems',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('merchid', models.IntegerField()),
                ('uniqueid', models.IntegerField()),
                ('bundle', models.IntegerField()),
                ('price', models.IntegerField()),
            ],
            options={
                'db_table': 'hiredmerchantsaveitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hiredmerchantsaves',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('desc', models.CharField(max_length=100)),
                ('itemid', models.IntegerField(db_column='itemId')),
                ('ownername', models.CharField(db_column='ownerName', max_length=30)),
                ('ownerid', models.IntegerField(db_column='ownerId')),
                ('owneraccid', models.IntegerField(db_column='ownerAccid')),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('map', models.IntegerField()),
                ('channel', models.IntegerField()),
                ('start', models.BigIntegerField()),
                ('meso', models.IntegerField()),
            ],
            options={
                'db_table': 'hiredmerchantsaves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('win', models.IntegerField()),
                ('lose', models.IntegerField()),
            ],
            options={
                'db_table': 'hns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Htsquads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.PositiveIntegerField()),
                ('leaderid', models.PositiveIntegerField()),
                ('status', models.PositiveIntegerField()),
                ('members', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'htsquads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InnerAbilitySkills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('skill_id', models.IntegerField()),
                ('skill_level', models.IntegerField()),
                ('max_level', models.IntegerField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'db_table': 'inner_ability_skills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invensave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charid', models.PositiveIntegerField()),
                ('upgradeslots', models.IntegerField()),
                ('level', models.IntegerField()),
                ('str', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('int', models.IntegerField()),
                ('luk', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('watk', models.IntegerField()),
                ('matk', models.IntegerField()),
                ('wdef', models.IntegerField()),
                ('mdef', models.IntegerField()),
                ('acc', models.IntegerField()),
                ('avoid', models.IntegerField()),
                ('hands', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('jump', models.IntegerField()),
                ('vicioushammer', models.IntegerField(db_column='ViciousHammer')),
                ('itemlevel', models.IntegerField(db_column='itemLevel')),
                ('itemexp', models.IntegerField(db_column='itemEXP')),
                ('durability', models.IntegerField()),
                ('enhance', models.SmallIntegerField()),
                ('state', models.IntegerField()),
                ('lines', models.IntegerField()),
                ('potential1', models.IntegerField()),
                ('potential2', models.IntegerField()),
                ('potential3', models.IntegerField()),
                ('potential4', models.IntegerField()),
                ('potential5', models.IntegerField()),
                ('potential6', models.IntegerField()),
                ('anvil', models.IntegerField()),
                ('hpr', models.SmallIntegerField(db_column='hpR')),
                ('mpr', models.SmallIntegerField(db_column='mpR')),
                ('potential7', models.IntegerField()),
                ('fire', models.IntegerField()),
                ('downlevel', models.IntegerField()),
                ('bossdmg', models.IntegerField()),
                ('alldmgp', models.IntegerField()),
                ('allstatp', models.IntegerField()),
                ('ignorewdef', models.IntegerField(db_column='IgnoreWdef')),
                ('soulname', models.IntegerField()),
                ('soulenchanter', models.IntegerField()),
                ('soulpotential', models.IntegerField()),
                ('soulskill', models.IntegerField()),
                ('starforce', models.IntegerField()),
                ('itemtrace', models.IntegerField()),
                ('firestat', models.CharField(max_length=128)),
                ('itemid', models.IntegerField()),
                ('confirm', models.IntegerField()),
            ],
            options={
                'db_table': 'invensave',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invensave2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('confirm', models.IntegerField()),
            ],
            options={
                'db_table': 'invensave2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryequipment',
            fields=[
                ('inventoryequipmentid', models.AutoField(primary_key=True, serialize=False)),
                ('inventoryitemid', models.PositiveIntegerField()),
                ('upgradeslots', models.IntegerField()),
                ('level', models.IntegerField()),
                ('str', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('int', models.IntegerField()),
                ('luk', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('watk', models.IntegerField()),
                ('matk', models.IntegerField()),
                ('wdef', models.IntegerField()),
                ('mdef', models.IntegerField()),
                ('acc', models.IntegerField()),
                ('avoid', models.IntegerField()),
                ('hands', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('jump', models.IntegerField()),
                ('vicioushammer', models.IntegerField(db_column='ViciousHammer')),
                ('itemlevel', models.IntegerField(db_column='itemLevel')),
                ('itemexp', models.IntegerField(db_column='itemEXP')),
                ('durability', models.IntegerField()),
                ('enhance', models.SmallIntegerField()),
                ('state', models.IntegerField()),
                ('lines', models.IntegerField()),
                ('potential1', models.IntegerField()),
                ('potential2', models.IntegerField()),
                ('potential3', models.IntegerField()),
                ('potential4', models.IntegerField()),
                ('potential5', models.IntegerField()),
                ('potential6', models.IntegerField()),
                ('anvil', models.IntegerField()),
                ('hpr', models.SmallIntegerField(db_column='hpR')),
                ('mpr', models.SmallIntegerField(db_column='mpR')),
                ('potential7', models.IntegerField()),
                ('fire', models.IntegerField()),
                ('downlevel', models.IntegerField()),
                ('bossdmg', models.IntegerField()),
                ('alldmgp', models.IntegerField()),
                ('allstatp', models.IntegerField()),
                ('ignorewdef', models.IntegerField(db_column='IgnoreWdef')),
                ('soulname', models.IntegerField()),
                ('soulenchanter', models.IntegerField()),
                ('soulpotential', models.IntegerField()),
                ('soulskill', models.IntegerField()),
                ('starforce', models.IntegerField()),
                ('itemtrace', models.IntegerField()),
                ('firestat', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'inventoryequipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryitems',
            fields=[
                ('inventoryitemid', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('characterid', models.IntegerField(blank=True, null=True)),
                ('accountid', models.IntegerField()),
                ('packageid', models.IntegerField(db_column='packageId')),
                ('itemid', models.IntegerField()),
                ('inventorytype', models.IntegerField()),
                ('position', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('owner', models.TextField(blank=True, null=True)),
                ('gm_log', models.TextField(blank=True, db_column='GM_Log', null=True)),
                ('uniqueid', models.IntegerField()),
                ('flag', models.IntegerField()),
                ('expiredate', models.BigIntegerField()),
                ('giftfrom', models.CharField(blank=True, db_column='giftFrom', max_length=20, null=True)),
                ('iscash', models.IntegerField(db_column='isCash')),
                ('ispet', models.IntegerField(db_column='isPet')),
                ('isandroid', models.IntegerField(db_column='isAndroid')),
                ('issale', models.IntegerField()),
            ],
            options={
                'db_table': 'inventoryitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventorylog',
            fields=[
                ('inventorylogid', models.AutoField(primary_key=True, serialize=False)),
                ('inventoryitemid', models.PositiveIntegerField()),
                ('msg', models.TextField()),
            ],
            options={
                'db_table': 'inventorylog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryslot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterid', models.PositiveIntegerField(blank=True, null=True)),
                ('equip', models.PositiveIntegerField(blank=True, null=True)),
                ('use', models.PositiveIntegerField(blank=True, null=True)),
                ('setup', models.PositiveIntegerField(blank=True, null=True)),
                ('etc', models.PositiveIntegerField(blank=True, null=True)),
                ('cash', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inventoryslot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipbans',
            fields=[
                ('ipbanid', models.AutoField(primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'ipbans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itempot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('lifeid', models.IntegerField()),
                ('slot', models.IntegerField()),
                ('level', models.IntegerField()),
                ('status', models.IntegerField()),
                ('fullness', models.IntegerField()),
                ('closeness', models.IntegerField()),
                ('starttime', models.BigIntegerField()),
                ('sleeptime', models.BigIntegerField()),
                ('inccloseleft', models.IntegerField(db_column='incCloseLeft')),
            ],
            options={
                'db_table': 'itempot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keymap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterid', models.IntegerField()),
                ('key', models.IntegerField()),
                ('type', models.IntegerField()),
                ('action', models.IntegerField()),
            ],
            options={
                'db_table': 'keymap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keyvalue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('key', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'keyvalue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keyvalue2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('key', models.CharField(max_length=100)),
                ('value', models.BigIntegerField()),
            ],
            options={
                'db_table': 'keyvalue2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Learnexp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accid', models.IntegerField()),
                ('exp', models.IntegerField()),
            ],
            options={
                'db_table': 'learnexp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skillid', models.PositiveIntegerField()),
                ('skilllevel', models.PositiveIntegerField(db_column='skillLevel')),
                ('link_cid', models.PositiveIntegerField()),
                ('cid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'link_skill',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Macbans',
            fields=[
                ('macbanid', models.AutoField(primary_key=True, serialize=False)),
                ('mac', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'macbans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Macfilters',
            fields=[
                ('macfilterid', models.AutoField(primary_key=True, serialize=False)),
                ('filter', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'macfilters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Marri',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('pid', models.IntegerField()),
                ('time', models.BigIntegerField()),
                ('pname', models.CharField(max_length=50)),
                ('ringid', models.IntegerField()),
            ],
            options={
                'db_table': 'marri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medalranking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('value', models.BigIntegerField()),
            ],
            options={
                'db_table': 'medalranking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.TextField()),
                ('date', models.CharField(blank=True, max_length=64, null=True)),
                ('memo', models.TextField()),
                ('reply', models.TextField()),
            ],
            options={
                'db_table': 'memo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Monsterbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charid', models.PositiveIntegerField()),
                ('cardid', models.PositiveIntegerField()),
                ('level', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monsterbook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mountdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterid', models.PositiveIntegerField(blank=True, null=True)),
                ('level', models.PositiveIntegerField(db_column='Level')),
                ('exp', models.PositiveIntegerField(db_column='Exp')),
                ('fatigue', models.PositiveIntegerField(db_column='Fatigue')),
            ],
            options={
                'db_table': 'mountdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mulung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('time', models.BigIntegerField()),
                ('timestring', models.CharField(db_column='timeString', max_length=50)),
            ],
            options={
                'db_table': 'mulung',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mulungdojo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charid', models.IntegerField()),
                ('stage', models.IntegerField()),
            ],
            options={
                'db_table': 'mulungdojo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.CharField(max_length=13)),
                ('from_field', models.CharField(db_column='from', max_length=13)),
                ('message', models.TextField()),
                ('timestamp', models.BigIntegerField()),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nxcode',
            fields=[
                ('code', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('valid', models.IntegerField()),
                ('user', models.CharField(blank=True, max_length=13, null=True)),
                ('type', models.IntegerField()),
                ('item', models.IntegerField()),
            ],
            options={
                'db_table': 'nxcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parttime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.PositiveIntegerField()),
                ('job', models.PositiveIntegerField()),
                ('starttime', models.BigIntegerField()),
                ('reward', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'parttime',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('recom', models.IntegerField(blank=True, null=True)),
                ('recomp', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'party',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pets',
            fields=[
                ('uniqueid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=13, null=True)),
                ('level', models.PositiveIntegerField()),
                ('closeness', models.PositiveIntegerField()),
                ('fullness', models.PositiveIntegerField()),
                ('pet_skill', models.CharField(max_length=70)),
                ('expiredate', models.BigIntegerField()),
                ('pet_buff', models.IntegerField()),
                ('color', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playernpcs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=13)),
                ('hair', models.IntegerField()),
                ('face', models.IntegerField()),
                ('skin', models.IntegerField()),
                ('dir', models.IntegerField()),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('map', models.IntegerField()),
            ],
            options={
                'db_table': 'playernpcs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayernpcsEquip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('npcid', models.IntegerField()),
                ('equipid', models.IntegerField()),
                ('equippos', models.IntegerField()),
            ],
            options={
                'db_table': 'playernpcs_equip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questactions',
            fields=[
                ('questactionid', models.AutoField(primary_key=True, serialize=False)),
                ('questid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'questactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questinfo',
            fields=[
                ('questinfoid', models.AutoField(primary_key=True, serialize=False)),
                ('characterid', models.IntegerField()),
                ('quest', models.IntegerField()),
                ('data', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'questinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questrequirements',
            fields=[
                ('questrequirementid', models.AutoField(primary_key=True, serialize=False)),
                ('questid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'questrequirements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Queststatus',
            fields=[
                ('queststatusid', models.AutoField(primary_key=True, serialize=False)),
                ('characterid', models.IntegerField()),
                ('quest', models.IntegerField()),
                ('status', models.IntegerField()),
                ('time', models.IntegerField()),
                ('forfeited', models.IntegerField()),
                ('customdata', models.CharField(blank=True, db_column='customData', max_length=20, null=True)),
            ],
            options={
                'db_table': 'queststatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Queststatusmobs',
            fields=[
                ('queststatusmobid', models.AutoField(primary_key=True, serialize=False)),
                ('queststatusid', models.PositiveIntegerField()),
                ('mob', models.IntegerField()),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'queststatusmobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quickslot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('index', models.IntegerField()),
                ('key', models.IntegerField()),
            ],
            options={
                'db_table': 'quickslot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Raed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('ran', models.TextField()),
                ('countta', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'raed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reactordrops',
            fields=[
                ('reactordropid', models.AutoField(primary_key=True, serialize=False)),
                ('reactorid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('chance', models.IntegerField()),
                ('questid', models.IntegerField()),
            ],
            options={
                'db_table': 'reactordrops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Receivedaccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'receivedaccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecomLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('recom', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recom_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporttime', models.DateTimeField()),
                ('reporterid', models.IntegerField()),
                ('victimid', models.IntegerField()),
                ('reason', models.IntegerField()),
                ('chatlog', models.TextField()),
                ('status', models.TextField()),
            ],
            options={
                'db_table': 'reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rewardsaves',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'rewardsaves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ringid', models.IntegerField(db_column='ringId')),
                ('itemid', models.IntegerField()),
                ('partnerchrid', models.IntegerField(db_column='partnerChrId')),
                ('partnername', models.CharField(db_column='partnerName', max_length=255)),
                ('partnerringid', models.IntegerField(db_column='partnerRingId')),
            ],
            options={
                'db_table': 'rings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Savedlocations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterid', models.IntegerField()),
                ('locationtype', models.IntegerField()),
                ('map', models.IntegerField()),
            ],
            options={
                'db_table': 'savedlocations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Send',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('itemid', models.TextField(blank=True, null=True)),
                ('itemop', models.TextField(blank=True, null=True)),
                ('name2', models.TextField(blank=True, null=True)),
                ('time', models.TextField(blank=True, null=True)),
                ('itime', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'send',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Serialbans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.TextField()),
            ],
            options={
                'db_table': 'serialbans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shopitems',
            fields=[
                ('shopitemid', models.AutoField(primary_key=True, serialize=False)),
                ('shopid', models.PositiveIntegerField()),
                ('itemid', models.IntegerField()),
                ('price', models.IntegerField()),
                ('position', models.IntegerField()),
                ('pricequantity', models.IntegerField()),
                ('tab', models.IntegerField(db_column='Tab')),
                ('quantity', models.IntegerField()),
                ('period', models.IntegerField()),
            ],
            options={
                'db_table': 'shopitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shops',
            fields=[
                ('shopid', models.AutoField(primary_key=True, serialize=False)),
                ('npcid', models.IntegerField(blank=True, null=True)),
                ('usage', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'shops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skillmacros',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterid', models.IntegerField()),
                ('position', models.IntegerField()),
                ('skill1', models.IntegerField()),
                ('skill2', models.IntegerField()),
                ('skill3', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=13, null=True)),
                ('shout', models.IntegerField()),
            ],
            options={
                'db_table': 'skillmacros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skillid', models.IntegerField()),
                ('characterid', models.IntegerField()),
                ('skilllevel', models.IntegerField()),
                ('masterlevel', models.IntegerField()),
                ('expiration', models.BigIntegerField()),
            ],
            options={
                'db_table': 'skills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkillsCooldowns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charid', models.IntegerField()),
                ('skillid', models.IntegerField(db_column='SkillID')),
                ('length', models.BigIntegerField()),
                ('starttime', models.BigIntegerField(db_column='StartTime')),
            ],
            options={
                'db_table': 'skills_cooldowns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spawn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifeid', models.IntegerField()),
                ('rx0', models.IntegerField()),
                ('rx1', models.IntegerField()),
                ('cy', models.IntegerField()),
                ('fh', models.IntegerField()),
                ('type', models.CharField(max_length=11)),
                ('dir', models.IntegerField()),
                ('mapid', models.IntegerField()),
                ('mobtime', models.IntegerField(db_column='mobTime')),
            ],
            options={
                'db_table': 'spawn',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpawnsProfession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idd', models.IntegerField()),
                ('f', models.IntegerField()),
                ('fh', models.IntegerField()),
                ('type', models.CharField(max_length=1)),
                ('cy', models.IntegerField()),
                ('rx0', models.IntegerField()),
                ('rx1', models.IntegerField()),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('mobtime', models.IntegerField(blank=True, null=True)),
                ('mid', models.IntegerField()),
            ],
            options={
                'db_table': 'spawns_profession',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Steelskills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('skillid', models.IntegerField()),
                ('skilllevel', models.IntegerField()),
                ('index', models.IntegerField()),
                ('slot', models.IntegerField()),
                ('equipped', models.IntegerField()),
            ],
            options={
                'db_table': 'steelskills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storages',
            fields=[
                ('storageid', models.AutoField(primary_key=True, serialize=False)),
                ('accountid', models.IntegerField()),
                ('slots', models.IntegerField()),
                ('meso', models.BigIntegerField()),
            ],
            options={
                'db_table': 'storages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TradeCm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chr_name', models.TextField(blank=True, null=True)),
                ('from_name', models.TextField(blank=True, null=True)),
                ('cash', models.IntegerField(blank=True, null=True)),
                ('meso', models.TextField(blank=True, null=True)),
                ('confirm', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trade_cm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trocklocations',
            fields=[
                ('trockid', models.AutoField(primary_key=True, serialize=False)),
                ('characterid', models.IntegerField(blank=True, null=True)),
                ('mapid', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'trocklocations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebsiteEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('author', models.CharField(max_length=16)),
                ('date', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=32)),
                ('content', models.TextField()),
                ('views', models.IntegerField()),
            ],
            options={
                'db_table': 'website_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebsiteNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('author', models.CharField(max_length=16)),
                ('date', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('views', models.IntegerField()),
            ],
            options={
                'db_table': 'website_news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterid', models.IntegerField()),
                ('sn', models.IntegerField()),
            ],
            options={
                'db_table': 'wishlist',
                'managed': False,
            },
        ),
    ]
